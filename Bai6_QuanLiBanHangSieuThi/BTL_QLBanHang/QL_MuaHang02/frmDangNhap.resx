<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>